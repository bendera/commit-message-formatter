name: Release on NPM

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type'
        required: true
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major
      releaseChannel:
        description: 'Release Channel'
        required: true
        type: choice
        default: pre
        options:
          - stable
          - pre

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name "release-bot"
          git config --global user.email "szoftverhiba+release-bot@gmail.com"

      - name: Get Current Version Number
        run: |
          CURRENT_VERSION=$(npm pkg get version | cut -d'"' -f 2)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo $CURRENT_VERSION

      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Bump version (Pre)
        run: |
          RELEASE_VERSION=$(npx semver -i prerelease --preid=pre $CURRENT_VERSION)
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          npm version $RELEASE_VERSION --git-tag-version=false
        if: ${{ github.event.inputs.releaseChannel == 'pre' }}

      - name: Bump version (Stable)
        run: |
          RELEASE_VERSION=$(npx semver $CURRENT_VERSION -i github.event.inputs.releaseType)
          npm version $RELEASE_VERSION --git-tag-version=false
        if: ${{ github.event.inputs.releaseChannel == 'stable' }}

      - name: Tagging
        run: |
          git add .
          git commit -m "$RELEASE_VERSION"
          git tag -a v$RELEASE_VERSION -m "$RELEASE_VERSION"

      - name: Push tag
        run: |
          git push
          git push origin --tags

      - run: |
          export GIT_TAG=$(git describe --tags --abbrev=0)
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV

      - name: Build package
        run: npm pack

      - name: Publish (Stable)
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ github.event.inputs.releaseChannel == 'stable' }}

      - name: Publish (Pre)
        run: npm publish --tag=pre
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ github.event.inputs.releaseChannel == 'pre' }}

      - name: Github Release (Pre)
        uses: ncipollo/release-action@v1
        if: ${{ github.event.inputs.releaseChannel == 'pre' }}
        with:
          prerelease: true
          draft: true
          tag: ${{ env.GIT_TAG }}
          generateReleaseNotes: true

      - name: Github Release (Stable)
        uses: ncipollo/release-action@v1
        if: ${{ github.event.inputs.releaseChannel == 'stable' }}
        with:
          prerelease: false
          draft: true
          tag: ${{ env.GIT_TAG }}
          generateReleaseNotes: true
